generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chat {
  id             Int      @id(map: "table_name_pkey") @unique @default(autoincrement())
  userId         Int
  questionType   String   @db.VarChar(1)
  questionNumber Int
  answer         String   @db.VarChar(100)
  grade          Int?
  createdAt      DateTime @default(dbgenerated("CURRENT_DATE")) @db.Date
  updatedAt      DateTime @updatedAt @db.Date
  teamId         Int
  nickname       nickname @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_nickname_id_fk")
  team           team     @relation(fields: [teamId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_team_id_fk")
}

model nickname {
  id        Int        @id(map: "user_pkey") @unique @default(autoincrement())
  name      String     @unique @db.VarChar(4)
  createdAt DateTime   @default(dbgenerated("CURRENT_DATE")) @db.Date
  updatedAt DateTime   @updatedAt @db.Date
  chat      chat[]
  team_user team_user?
}

model team {
  id         Int         @id @unique
  teamName   String      @db.VarChar(14)
  teamMember Int
  createdAt  DateTime    @default(dbgenerated("CURRENT_DATE")) @db.Date
  updatedAt  DateTime    @updatedAt @db.Date
  chat       chat[]
  team_user  team_user[]
}

model team_user {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique(map: "team_user_user_id_key")
  teamId      Int
  isCompleted Boolean
  nickname    nickname @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "team_user_nickname_id_fk")
  team        team     @relation(fields: [teamId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "team_user_team_id_fk")
}
